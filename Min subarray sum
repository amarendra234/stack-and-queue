class Solution {
public:
    int sumSubarrayMins(vector<int>& arr) {
        vector<int>right_smaller(arr.size());
        vector<int>left_smaller(arr.size());
        stack<int>st;
        for(int i=arr.size()-1;i>=0;i--){
                    while(!st.empty() and arr[st.top()]>arr[i]){
                        st.pop();
                    }
                    if(!st.empty()){
                        right_smaller[i]=st.top()-i;
                    }else{
                        right_smaller[i]=arr.size()-i;
                    }
                    st.push(i);

               
        }
        while(st.size()>0){
            st.pop();
        }
        for(int i=0;i<arr.size();i++){
                    while(!st.empty() and arr[st.top()]>=arr[i]){
                        st.pop();
                    }
                    if(!st.empty()){
                        left_smaller[i]=i-st.top();
                    }else{
                        left_smaller[i]=i+1;
                    }
                    st.push(i);
               
        }
        for(int i=0;i<arr.size();i++){
            cout<<right_smaller[i]<<" ";
        }
        cout<<endl;
         for(int i=0;i<arr.size();i++){
            cout<<left_smaller[i]<<" ";
        }
        long long int ans=0;
        for(int i=0;i<arr.size();i++){
           long long  int val=(left_smaller[i]%1000000007*right_smaller[i]%1000000007)%1000000007;
            val=(val%1000000007*arr[i]%1000000007)%1000000007;
            ans=(ans%1000000007+val%1000000007)%1000000007;
        }
        return (int)ans;
    }
};
